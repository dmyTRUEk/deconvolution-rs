# y = [y0, y1, y2, …]
# [deconvolution_function.PerPoint]
# diff_function_type = "DySqr"
# # comment `antispikes` out to disable them
# antispikes = { antispikes_type = "DySqr", antispikes_k = 1.0 }
# initial_value = "v=0.0"

# y = a1*exp(-(x-s1)/t1) + …
# [deconvolution_function.Exponents]
# diff_function_type = "DySqr"
# initial_values = """
#     a0=1.0, s0=1.0, t0=1.0,
#     a1=1.0, s1=1.0, t1=1.0,
# """

# y = a * (1-exp(-(x-s)/ta)) * exp(-(x-s)/tb)
# [deconvolution_function.SatExp_DecExp]
# diff_function_type = "DySqr"
# initial_values = "a=1, s=299, ta=62.6, tb=6.92"

# y = a1 * (1-exp(-(x-s1)/ta1)) * exp(-(x-s1)/tb1) + a2 * (1-exp(-(x-s2)/ta2)) * exp(-(x-s2)/tb2)
# [deconvolution_function.Two_SatExp_DecExp]
# diff_function_type = "DySqr"
# initial_values = """
#     a1=0.12, s1=296.0, ta1=3.96, tb1=6.7,
#     a2=1.16, s2=310.0, ta2=23.2, tb2=1.79,
# """

# y = a * (1-exp(-(x-s)/ta)) * (exp(-(x-s)/tb) + h)
# [deconvolution_function.SatExp_DecExpPlusConst]
# diff_function_type = "DySqr"
# initial_values = "a=0.1, s=-1.0, h=1e-2, ta=0.1, tb=10.0"
# allow_tb_less_than_ta = false

# y = a * (1-exp(-(x-s)/ta)) * (exp(-(x-s)/tb) + exp(-(x-s)/tc))
# [deconvolution_function.SatExp_TwoDecExp]
# diff_function_type = "DySqr"
# initial_values = "a=0.02, s=-9.0, ta=6e-6, tb=35.0, tc=8.0"

# y = a * (1-exp(-(x-s)/ta)) * (exp(-(x-s)/tb) + exp(-(x-s)/tc) + h)
# [deconvolution_function.SatExp_TwoDecExpPlusConst]
# diff_function_type = "DySqr"
# initial_values = "a=0.1, s=-5.0, h=1e-2, ta=0.1, tb=10.0, tc=20.0"

# y = (1-exp(-(x-s)/ta)) * (b*exp(-(x-s)/tb) + c*exp(-(x-s)/tc))
# [deconvolution_function.SatExp_TwoDecExp_SeparateConsts]
# diff_function_type = "DySqr"
# initial_values = "b=9, c==5, s=-1<10, ta=70>0, 0 < tb = 10 < 100, tc=7"

# y = a * (1-exp(-(x-s)/ta)) * (b*exp(-(x-s)/tb) + (1-b)*exp(-(x-s)/tc))
# [deconvolution_function.SatExp_TwoDecExp_ConstrainedConsts]
# diff_function_type = "DySqr"
# initial_values = "a=1, 0<b=0.1<1, s==5, ta=-1<10, tb=70>0, 0 < tc = 10 < 100"
# initial_values = "a=0.5, b=0.8, s=0.1, ta=0.01, tb=0.1, tc=1"

# y = a / (1+exp(-(x-s)/ta)) * (b*exp(-(x-s)/tb) + (1-b)*exp(-(x-s)/tc))
[deconvolution_function.Sigmoid_TwoDecExp_ConstrainedConsts]
diff_function_type = "DySqr"
initial_values = "a=0.5, b=0.8, s=0.1, ta=0.01, tb=0.1, tc=1"


[deconvolution_params]
try_randomized_initial_values = 0
initial_values_random_scale = 10.0
print_only_better_deconvolution = false

[input_params]
align_steps_to = "smaller"
max_step_relative_diff = 0.02

[output_params]
significant_digits = 4

# [fit_algorithm.pattern_search]
# fit_algorithm_min_step = 1e-4
# fit_residue_evals_max = 1_000_000
# initial_step = 1.0
# alpha = 1.1     # step increase coefficient
# # beta = 0.9    # step decrease coefficient, default = 1/alpha

# [fit_algorithm.pattern_search_scaled_step]
# fit_algorithm_min_step = 1e-4
# fit_residue_evals_max = 1_000_000
# initial_step = 0.1
# alpha = 1.1     # step increase coefficient
# # beta = 0.9    # step decrease coefficient, default = 1/alpha

# [fit_algorithm.pattern_search_adaptive_step]
# fit_algorithm_min_step = 1e-4
# fit_residue_evals_max = 1_000_000
# initial_step = 0.1
# alpha = 1.1     # step increase coefficient
# # beta = 0.9    # step decrease coefficient, default = 1/alpha

[fit_algorithm.differential_evolution]
initial_values_random_scale = 10.0
generations = 1_000
population  = 100
mutation_speed        = 0.2
crossover_probability = 0.5

