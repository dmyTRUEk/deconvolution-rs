# y = [y0, y1, y2, …]
# [deconvolution_function.PerPoint]
# diff_function_type = "DySqr"
# # comment `antispikes` out to disable them
# antispikes = { antispikes_type = "DySqr", antispikes_k = 1.0 }
# initial_value = 0.0

# y = a1*exp(-(x-s1)/t1) + …
# [deconvolution_function.Exponents]
# diff_function_type = "DySqr"
# exponents_amount = 2
# # a0, s0, t0, a1, s1, t1, …
# initial_values = [
#     1.0, 1.0, 1.0,
#     1.0, 1.0, 1.0,
# ]

# y = a * (1-exp(-(x-s)/ta)) * exp(-(x-s)/tb)
# [deconvolution_function.SatExp_DecExp]
# diff_function_type = "DySqr"
# # s, ta, tb
# initial_values = [ 299.0, 62.6, 6.92 ]

# y = a1 * (1-exp(-(x-s1)/ta1)) * exp(-(x-s1)/tb1) + a2 * (1-exp(-(x-s2)/ta2)) * exp(-(x-s2)/tb2)
# [deconvolution_function.Two_SatExp_DecExp]
# diff_function_type = "DySqr"
# # a1, s1, ta1, tb1, a2, s2, ta2, tb2
# initial_values = [
#     0.12, 296.0, 3.96, 6.7,
#     1.16, 310.0, 23.2, 1.79
# ]

# y = a * (1-exp(-(x-s)/ta)) * (exp(-(x-s)/tb) + h)
# [deconvolution_function.SatExp_DecExpPlusConst]
# diff_function_type = "DySqr"
# # a, s, h, ta, tb
# initial_values = [ 0.1, -1.0, 1e-2, 0.1, 10.0 ]
# allow_tb_less_than_ta = false

# y = a * (1-exp(-(x-s)/ta)) * (exp(-(x-s)/tb) + exp(-(x-s)/tc))
# [deconvolution_function.SatExp_TwoDecExp]
# diff_function_type = "DySqr"
# # a, s, ta, tb, tc
# initial_values = [ 0.02, -9.0, 6e-6, 35.0, 8.0 ]

# y = a * (1-exp(-(x-s)/ta)) * (exp(-(x-s)/tb) + exp(-(x-s)/tc) + h)
# [deconvolution_function.SatExp_TwoDecExpPlusConst]
# diff_function_type = "DySqr"
# # a, s, h, ta, tb, tc
# initial_values = [ 0.1, -5.0, 1e-2, 0.1, 10.0, 20.0 ]

# y = (1-exp(-(x-s)/ta)) * (b*exp(-(x-s)/tb) + c*exp(-(x-s)/tc))
[deconvolution_function.SatExp_TwoDecExp_SeparateConsts]
diff_function_type = "DySqr"
# b, c, s, ta, tb, tc
initial_values = [ 4.0, 5.0, 120.0, 100.0, 6.0, 7.0 ]


[deconvolution_params]
try_randomized_initial_values = 0
initial_values_random_scale = 10.0
change_sing_probability = 0.05
print_only_better_deconvolution = true

[output_params]
significant_digits = 4

[fit_algorithm.pattern_search]
fit_algorithm_min_step = 1e-4
fit_residue_evals_max = 1_000_000
fit_residue_max_value = 1e6
initial_step = 1.0
alpha = 1.1     # step increase coefficient
# beta = 0.9    # step decrease coefficient, default = 1/alpha

# [fit_algorithm.downhill_simplex]
# fit_algorithm_min_step = 1e-4
# fit_residue_evals_max = 1_000_000
# fit_residue_max_value = 1e6
# initial_simplex_scale = 0.8
# params_diff_type = "DySqr"

